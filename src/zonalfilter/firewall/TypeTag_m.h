//
// Generated file, do not edit! Created by opp_msgtool 6.0 from TypeTag.msg.
//

#ifndef __INET_TYPETAG_M_H
#define __INET_TYPETAG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif


namespace inet {

class TypeTag;

}  // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/TagBase_m.h" // import inet.common.TagBase


namespace inet {

/**
 * Class generated from <tt>TypeTag.msg:7</tt> by opp_msgtool.
 * <pre>
 * class TypeTag extends TagBase
 * {
 *     string type;
 * }
 * </pre>
 */
class TypeTag : public ::inet::TagBase
{
  protected:
    ::omnetpp::opp_string type;

  private:
    void copy(const TypeTag& other);

  protected:
    bool operator==(const TypeTag&) = delete;

  public:
    TypeTag();
    TypeTag(const TypeTag& other);
    virtual ~TypeTag();
    TypeTag& operator=(const TypeTag& other);
    virtual TypeTag *dup() const override {return new TypeTag(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual const char * getType() const;
    virtual void setType(const char * type);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TypeTag& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TypeTag& obj) {obj.parsimUnpack(b);}


}  // namespace inet


namespace omnetpp {

template<> inline inet::TypeTag *fromAnyPtr(any_ptr ptr) { return check_and_cast<inet::TypeTag*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __INET_TYPETAG_M_H

